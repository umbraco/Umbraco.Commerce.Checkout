@inherits UmbracoViewPage
@{
    Layout = "UmbracoCommerceCheckoutLayout.cshtml";

    ViewData["finalized"] = true;
    ViewData["canGoBack"] = false;

    var store = Model.GetStore();

    var currentOrder = await UmbracoCommerceApi.Instance.GetCurrentFinalizedOrderAsync(store.Id);

    var themeColor = Model.GetThemeColor();
}

<div class="border border-gray-300 p-6 rounded mb-8 text-center">
    <span class="inline-flex items-center justify-center text-6xl border-4 border-green-500 rounded-full mb-4 w-24 h-24"><svg viewBox="0 0 20 20" class="inline-block w-16 h-16 fill-current text-green-500"><use href="#ico-check" /></svg></span>
    <h3 class="text-xl font-medium mb-4">@string.Format(Umbraco.GetDictionaryValueOrDefault("UmbracoCommerceCheckout.Confirmation.ThankYou", "Thank you for your order #{0}"), currentOrder.OrderNumber ?? currentOrder.CartNumber)</h3>
    <p class="mb-4">@Html.Raw(string.Format(Umbraco.GetDictionaryValueOrDefault("UmbracoCommerceCheckout.Confirmation.ConfirmationEmailSent", "A confirmation email has been sent to {0}"), "<strong>" + currentOrder.CustomerInfo.Email + "</strong>"))</p>
    <p><a href="/" class="inline-block bg-@(themeColor) text-white px-4 py-4 rounded hover:bg-gray-900">@Umbraco.GetDictionaryValueOrDefault("UmbracoCommerceCheckout.Confirmation.ReturnToStore", "Return to store")</a></p>
</div>

@await Html.PartialAsync("~/Views/UmbracoCommerceCheckout/Partials/UmbracoCommerceCheckoutOrderInfo.cshtml", currentOrder)
